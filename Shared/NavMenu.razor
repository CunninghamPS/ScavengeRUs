@using ScavengeRUs.Data
@inject NavigationManager navManager
@inherits MapPageBase
<head>
    <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-status-bar-style" content="default">
	<meta http-equiv="Content-Security-Policy" content="default-src * 'self' 'unsafe-inline' 'unsafe-eval' data: gap:">
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;700;800;900&family=Montserrat:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="NavBar/css/framework7.bundle.min.css">
    <link rel="stylesheet" href="NavBar/css/style.css">
	
</head>

<!--Map Page-->
<a @onclick="@(() => navigateTo("map"))">
	<i class="fa-solid fa-map-location fa-xl" id="mapButton" ></i>
</a>

<!--Game Page-->
<a @onclick="@(() => navigateTo("games"))">
	<i class="fa-solid fa-gamepad fa-xl" id="gamesButton" ></i>
</a>

<!--QR Scanner-->
<a @onclick="@(() => navigateTo("QRCodeScanner"))">
<div class="addQR">
    <i class="fa-solid fa-camera fa-xl" ></i>
</div>
</a>
<!--Task Page-->
<a @onclick="@(() => navigateTo("tasks"))">
	<i class="fa-solid fa-list-check fa-xl" id="tasksButton" ></i>
</a>

<!--Login Screen-->
<a @onclick="@(() => navigateTo("loginScreen"))">
	<i class="fa-solid fa-user fa-xl" id="profileButton" ></i>
</a>





@code{
	string[] paths = { "tasks", "loginScreen", "QRCodeScanner", "games", "", "map", "signUpScreen, profile"};

	public async Task<bool> navigateTo(string dest)
	{
		string url = navManager.Uri;
		int length = navManager.Uri.Split('/').Length;
		string addon = navManager.Uri.Split('/')[length - 1];
		if(paths.Contains(addon))
		{
			if(dest.Equals("map"))
				dest = "";
			if (secretKey != null && dest.Equals("loginScreen"))
				dest = "profile";
			navManager.NavigateTo("/" + dest);
		}
		else
		{
			if(addon.Equals("signUpScreen") || addon.Equals("loginScreen"))
				navManager.NavigateTo("/" + dest);
			else
				navManager.NavigateTo("/" + dest +"/" + addon);
		}
		return await Task.FromResult(true);
	}

	

}
	





