@page "/games"
@page "/games/{secretKey}"
@inherits MapPageBase
@inject NavigationManager NavigationManager
@using ScavengeRUs.Data



<div class="card">
                <header class="task-header">
                <div>
                    <div class="category-title">
                        
                        <!-- This can be set to something like: if (user.game == card.game && user.task == card.task) { set span completed }-->
                    </div>
                </div>
                <h2 class="task-title">
                    ETSU Game 1: <br />
                    This game will consist of Scanning QR codes in different locations across campus.
                </h2>
            </header>
            <div class="StartGameButton">
                <a @onclick="@StartClick"><span>Start Game</span></a>
            </div>
            <div class="gameInfo">
                <div class="info">
                    <div class="caption">Game</div>
                    <div class="name">ETSU Game 1</div>
                </div>
            </div>
            <div class="tags">
                <div>Link to game</div>
                <span @onclick=NavigateToTaskList><div>Link to task info</div></span>
            </div>
        </div>

<div id="target">
    <SfDialog Target="#target" Width="300px" ShowCloseIcon="true" @bind-Visible="Visibility" AllowPrerender="true" IsModal="true">
        <DialogEvents OnOverlayClick=@OffModalClick></DialogEvents>
        <DialogTemplates>
            <Header> Register </Header>
            <Content> Please Enter Phone Number and Email </Content>
        </DialogTemplates>
    </SfDialog>
</div>



@code{
    private bool Visibility { get; set; } = false;
    private void StartClick()
    {
        this.Visibility = true;
    }
    public void OffModalClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs arg)
    {
        this.Visibility = false;
    }
}


<style>
    #gamesButton{
        color: rgba(79,172,254,1);
    }
#tasksButton{
    color: rgba(79,172,254,1);
}

.StartGameButton {
    color: rgba(79,172,254,1);
    font-size: 20px;
    font-weight: 700;
    border-radius: 2rem;
    color: lightblue;
    cursor: pointer;
}

#target{
    height: 500px;
}

.syncfusion-modal-game {
    min-width: 300px;
    max-width: 300px;
    height: 350px;
    border: 10px;
    border-radius: 16px;
    background-color: rgb(27, 45, 59);
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
    z-index: 102;
    color: #fff;
    
}

.gamelinktag {
    position: absolute;
    width:100%;
    height:100%;
    top:auto;
    left:auto;

    z-index: 1;

}

.card-container {
    overflow-x: scroll;
    display: flex;
    padding: 2rem;
    padding-bottom: 75px;
}

::-webkit-scrollbar{
    display:none;
}

.card {
    min-width: 300px;
    max-width: 300px;
    height: 350px;
    border-radius: 16px;
    background-color: rgb(27, 45, 59);
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
    transition: 0.2s;
    border-color: gray;
}

.completed {
    color: green;
}

.tags {
    display: flex;
    flex-wrap: wrap;
    margin: 1rem 0 1rem;
}

.tags div {
    font-size: 9px;
    font-weight: 700;
    padding: 4px 10px;
    border: 3px solid rgb(18, 29, 38);
    border-radius: 2rem;
    color: lightblue;
    cursor: pointer;
}

.card .category-title {
    font-size: 14px;
    color: #fff;
    margin-bottom: 1rem;
}

.card .task-title {
    font-size: 20px;
    font-weight: 700;
    color: white;
}

.card .task-header {
    margin-bottom: auto;
}

.card .gameInfo {
    margin-top: 3rem;
    display: grid;
    grid-template-columns: 100px 1fr;
}

.card .caption {
    color: white !important;
}

.card .name {
    color: darkgray !important;
}

.card:not(:first-child) {
    margin-left: -100px;
}

.card:hover {
    transform: translateY(-1rem);
}

.card:hover~.card {
    transform: translateX(130px);
}
</style>


