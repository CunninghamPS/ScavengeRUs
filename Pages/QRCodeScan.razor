@page "/QRCodeScanner"
@page "/QRCodeScanner/{secretKey}"
@inherits MapPageBase
@using ScavengeRUs.Data
@using BlazorBarcodeScanner.ZXing.JS

<div style="text-align: center; width: 100%">
    <button class="btn btn-primary"
        type="button"
        style="max-width: 200px; margin-top: 50px"
        @onclick="(() => ShowScanBarcode = !ShowScanBarcode)">Scan QR Code Toggle
    </button>
    <input type="text" class="form-control" style="min-width: 100px; max-width: 500px; margin: auto; margin-top: 30px"
           @bind-value="BarCode"
           placeholder="Code" />
</div>

@if (ShowScanBarcode)
{
    <div class="QRCodeScanner">
        <BlazorBarcodeScanner.ZXing.JS.BarcodeReader @ref="_reader"
            Title=""
            StartCameraAutomatically="true"
            ShowStart="false"
            ShowReset="false"
            ShowToggleTorch="false"
            ShowVideoDeviceList="false"
            VideoWidth="500"
            VideoHeight="500"
            OnBarcodeReceived="QRCodeString"
            ShowResult="false"
         />
    </div>
}
<br />

@code {
    private BarcodeReader _reader;

    bool ShowScanBarcode { get; set; } = true;

    public string? BarCode { get; set; }

    private string message;

    private Task OnError(string message)
    {
        this.message = message;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async void QRCodeString(BarcodeReceivedEventArgs args)
    {
        await InvokeAsync(() =>
        {
            BarCode = args.BarcodeText;
            StateHasChanged();
        });
    }

    bool ShowCodes;
}

<style>
    .QRCodeScanner {
        text-align: center; 
        width: 100%;
    }




</style>