@page "/QRCodeScanner"
@page "/QRCodeScanner/{secretKey}"
@inherits MapPageBase
@using ScavengeRUs.Data
@using BlazorBarcodeScanner.ZXing.JS

<button class="btn btn-primary"
        type="button"
        @onclick="(() => ShowScanBarcode = !ShowScanBarcode)">Scan QR Code Toggle
</button>
<input type="text" class="form-control" style="min-width: 100px;"
       @bind-value="BarCode"
       placeholder="Code" />
@if (ShowScanBarcode)
{

     <BlazorBarcodeScanner.ZXing.JS.BarcodeReader @ref="_reader"
        Title=""
        StartCameraAutomatically="true"
        ShowStart="false"
        ShowReset="false"
        ShowToggleTorch="false"
        ShowVideoDeviceList="false"
        VideoWidth="500"
        VideoHeight="500"
        OnBarcodeReceived="QRCodeString"
        ShowResult="false"
     />

}
<br />

@code {
    private BarcodeReader _reader;

    bool ShowScanBarcode { get; set; } = false;

    public string? BarCode { get; set; }

    private string message;

    private Task OnError(string message)
    {
        this.message = message;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async void QRCodeString(BarcodeReceivedEventArgs args)
    {
        await InvokeAsync(() =>
        {
            BarCode = args.BarcodeText;
            StateHasChanged();
        });
    }

    bool ShowCodes;
}
